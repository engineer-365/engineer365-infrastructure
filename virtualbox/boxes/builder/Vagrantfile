# -*- mode: ruby -*-
# vi: set ft=ruby :

#
#  MIT License
#
#  Copyright (c) 2020 engineer365.org
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.

puts "Vagrantfile variables:"

opt_size=ENV["opt_size"]
puts "opt_size: #{opt_size}"

opt_verbose=ENV["opt_verbose"]
puts "opt_verbose: #{opt_verbose}"

org=ENV["org"]
puts "org: #{org}"

vm_name=ENV["box_name____org_builder"]
vm_name_fq="#{org}-#{vm_name}"
puts "vm name: #{vm_name_fq}"

base_box_name=ENV["box_name____org_ubuntu18"]
base_box_name_fq="#{org}/#{base_box_name}"
puts "base box: #{base_box_name_fq}"

k8s_gpg=ENV["k8s_gpg"]
puts "k8s_gpg: #{k8s_gpg}"

k8s_apt=ENV["k8s_apt"]
puts "k8s_apt: #{k8s_apt}"

go_proxy=ENV["GOPROXY"]
puts "GOPROXY: #{go_proxy}"


Vagrant.configure("2") do |config|

  config.vm.box = base_box_name_fq

  if opt_size == "mini"
    config.disksize.size = '60GB'
  elsif opt_size == "full"
    config.disksize.size = '240GB'
  else
    config.disksize.size = '120GB'
  end

  config.vm.provider "virtualbox" do |p|
    p.name = vm_name_fq
    p.linked_clone = false

    if opt_size == "mini"
      p.memory = "4096"
    else
      p.memory = "8192"
    end
  end

  # Enable provisioning with a shell script.
  config.vm.provision "shell" do |s|
    s.path = "provision.sh"
    s.args = " \"#{k8s_gpg}\" \"#{k8s_apt}\" \"#{go_proxy}\" "
  end

end
